{"version":3,"sources":["../../src/authClient.js"],"names":["type","params","username","localStorage","setItem","Promise","resolve","removeItem","status","reject","getItem"],"mappings":";;;;;;AAAA;;kBAEe,UAACA,IAAD,EAAOC,MAAP,EAAkB;AAC5B;AACD,QAAGD,gCAAH,EAAuB;AAAA,YACXE,QADW,GACED,MADF,CACXC,QADW;;AAEnBC,qBAAaC,OAAb,CAAqB,UAArB,EAAiCF,QAAjC;AACG;AACH,eAAOG,QAAQC,OAAR,EAAP;AACH;;AAED;AACA,QAAGN,iCAAH,EAAwB;AACpBG,qBAAaI,UAAb,CAAwB,UAAxB;AACA,eAAOF,QAAQC,OAAR,EAAP;AACH;;AAED;AACA,QAAIN,gCAAJ,EAAwB;AAAA,YACbQ,MADa,GACHP,MADG,CACbO,MADa;;AAEpB,YAAIA,WAAW,GAAX,IAAkBA,WAAW,GAAjC,EAAqC;AACjCL,yBAAaI,UAAb,CAAwB,UAAxB;AACA,mBAAOF,QAAQI,MAAR,EAAP;AACH;AACD,eAAOJ,QAAQC,OAAR,EAAP;AACH;;AAED;AACA,QAAIN,gCAAJ,EAAyB;AACrB,eAAOG,aAAaO,OAAb,CAAqB,UAArB,IAAmCL,QAAQC,OAAR,EAAnC,GAAuDD,QAAQI,MAAR,EAA9D;AACH;AACD,WAAOJ,QAAQI,MAAR,CAAe,gBAAf,CAAP;AAEH,C","file":"authClient.js","sourcesContent":["import {AUTH_LOGIN, AUTH_LOGOUT, AUTH_ERROR, AUTH_CHECK} from 'admin-on-rest';\r\n\r\nexport default (type, params) => {\r\n     // Se llama cuando el usuario intenta iniciar sesion\r\n    if(type === AUTH_LOGIN){\r\n        const { username } = params;\r\n        localStorage.setItem('username', username);\r\n           //Acepta todas las combinaciones de usuario y contraseña\r\n        return Promise.resolve();\r\n    }\r\n\r\n    //llamado cuando el usuario hace click en el boton logout\r\n    if(type === AUTH_LOGOUT){\r\n        localStorage.removeItem('username');\r\n        return Promise.resolve();\r\n    }\r\n\r\n    //llamado cuando el API devuelve un error\r\n    if( type === AUTH_ERROR){\r\n        const {status} = params;\r\n        if (status === 401 || status === 403){\r\n            localStorage.removeItem('username');\r\n            return Promise.reject();\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    // llamado cuando el usuario navega a una nueva ubicación\r\n    if (type === AUTH_CHECK) {\r\n        return localStorage.getItem('username') ? Promise.resolve() : Promise.reject();\r\n    }\r\n    return Promise.reject('Unknown method');\r\n\r\n};"]}